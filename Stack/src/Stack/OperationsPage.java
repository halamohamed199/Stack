/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Stack;

import javax.swing.JOptionPane;
/**
 *
 * @author Hala Mohamed
 */
public class OperationsPage extends javax.swing.JFrame {

    /**
     * Creates new form OperationsPage
     */
    public OperationsPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topButton = new javax.swing.JButton();
        isEmptyButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        sizeButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        pushButton = new javax.swing.JButton();
        popButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 204));

        topButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        topButton.setText("Top");
        topButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topButtonActionPerformed(evt);
            }
        });

        isEmptyButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        isEmptyButton.setText("IsEmpty");
        isEmptyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isEmptyButtonActionPerformed(evt);
            }
        });

        showButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        showButton.setText("Show");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        sizeButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sizeButton.setText("Size");
        sizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        pushButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pushButton.setText("Push");
        pushButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushButtonActionPerformed(evt);
            }
        });

        popButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        popButton.setText("Pop");
        popButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(showButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(topButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pushButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(popButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sizeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(isEmptyButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(popButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pushButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isEmptyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(topButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This function to design back button
     * it show stack design and close operationPage design
     * @param evt 
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        String demo[]={};
        Stack.main(demo);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed
    /**
     * This function to design push button
     * it push integer in stack
     * @param evt 
     */
    private void pushButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushButtonActionPerformed
        // TODO add your handling code here:
        String s = JOptionPane.showInputDialog("a number to push");
        if(s == null){
            JOptionPane.showMessageDialog(null, "you didn't enter a number to push!");
            return;
        }
        int i = Integer.valueOf(s);
        OperationsPage.obj.push(i);
    }//GEN-LAST:event_pushButtonActionPerformed
    /**
     * This function to design pop button
     * it remove the last inserted item from stack
     * @param evt 
     */
    private void popButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popButtonActionPerformed
        // TODO add your handling code here:
        if(OperationsPage.obj.isEmpty()){
            printIsEmpty();
            return;
        }
        OperationsPage.obj.pop();
    }//GEN-LAST:event_popButtonActionPerformed
    /**
     * This function th design top button
     * it return the last item inserted in stack
     * @param evt 
     */
    private void topButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topButtonActionPerformed
        // TODO add your handling code here:
        if(OperationsPage.obj.isEmpty()){        
            printIsEmpty();
            return;
        }
        JOptionPane.showMessageDialog(null,"top element is " + OperationsPage.obj.top());
    }//GEN-LAST:event_topButtonActionPerformed
    /**
     * This function to design isEmpty button
     * return true if stack empty, false otherwise
     * @param evt 
     */
    private void isEmptyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isEmptyButtonActionPerformed
        // TODO add your handling code here:
        if(OperationsPage.obj.isEmpty())
            printIsEmpty();
        else
            JOptionPane.showMessageDialog(null, "Stack is not empty");
    }//GEN-LAST:event_isEmptyButtonActionPerformed
    /**
     * This function to design show button
     * it show the content of stack
     * @param evt 
     */
    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        // TODO add your handling code here:
        int arr[] = OperationsPage.obj.show();
        String s = "[";
        if(arr.length == 0)s = "[]";
        for(int i= 0; i < arr.length; i++){
            s += arr[i];
            if(i != arr.length-1)s += ", ";
            else s += "]";
        }
        JOptionPane.showMessageDialog(null, s);
    }//GEN-LAST:event_showButtonActionPerformed
    /**
     * This is helper function to show message Stack is empty
     */
    private void printIsEmpty(){
        JOptionPane.showMessageDialog(null, "Stack is empty");
    }
    /**
     * This function to design size button
     * it return size of stack
     * @param evt 
     */
    private void sizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, OperationsPage.obj.size());
    }//GEN-LAST:event_sizeButtonActionPerformed

    /**
     * @param ob stackInterface
     */
    public static void operationsPageShow(StackInterface ob) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OperationsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OperationsPage().setVisible(true);
                OperationsPage.obj = ob;
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton isEmptyButton;
    private javax.swing.JButton popButton;
    private javax.swing.JButton pushButton;
    private javax.swing.JButton showButton;
    private javax.swing.JButton sizeButton;
    private javax.swing.JButton topButton;
    // End of variables declaration//GEN-END:variables
    private static StackInterface obj; 
}
